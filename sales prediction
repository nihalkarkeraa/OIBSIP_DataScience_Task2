#required libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

#company advertisement sales reports
df = pd.read_csv('Advertising.csv')

# display few rows
print("Dataset Preview:\n", df.head())

# check for null or missing values
print("\nMissing Values:\n", df.isnull().sum())

# data visualization - correlation heatmap
plt.figure(figsize=(8,6))
sns.heatmap(df.corr(), annot=True, cmap="coolwarm")
plt.title("Correlation Heatmap")
plt.show()

# pairplot for mulitple variables in the dataset
sns.pairplot(df)
plt.show()

# define input and output
X = df[['TV', 'Radio', 'Newspaper']]
y = df['Sales']

# split the dataset into training and testing set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# deploy the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict on test set
y_pred = model.predict(X_test)

# Evaluate the model
print("\nModel Evaluation:")
print("R2 Score:", r2_score(y_test, y_pred))
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("Model Intercept:", model.intercept_)
print("Model Coefficients:", model.coef_)

# predict sales for new inputs
new_data = pd.DataFrame({
    'TV': [150],
    'Radio': [40],
    'Newspaper': [15]
})

predicted_sales = model.predict(new_data)
print("\nPredicted Sales for new input:", predicted_sales[0])
